---
name: Package Docker Images

permissions:
  packages: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build-and-push-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          VERSION=$(date +%y.%m.%d.%H.%M)
          echo "tag=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Normalize repository name
        id: repo
        run: echo "name=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: List files
        run: ls -lR

      - name: Check Dockerfile
        run: ls -l api/Dockerfile

      - name: Validate Dockerfile exists
        run: |
          [ ! -f "api/Dockerfile" ] && echo "Dockerfile not found in api/" && exit 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.name }}-api:${{ steps.version.outputs.tag }}
            ghcr.io/${{ steps.repo.outputs.name }}-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ steps.repo.outputs.name }}-api:${{ steps.version.outputs.tag }}
          format: spdx-json
          upload-release-assets: false
          artifact-name: sbom-api-${{ steps.version.outputs.tag }}
